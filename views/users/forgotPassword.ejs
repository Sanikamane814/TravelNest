<% layout("/layouts/boilerplate") %>

<!-- Forgot Password Flow Container -->
<div class="forgot-password-container d-flex align-items-center justify-content-center min-vh-100 py-5">
  <div class="col-md-8 col-lg-6">

    <!-- Step 1: Request Reset Link -->
    <div class="card shadow-lg mb-4" id="requestResetSection">
      <div class="card-body p-4 p-md-5">
        <div class="text-center mb-4">
          <i class="fas fa-key fa-3x mb-3" style="color: #FF5A5F;"></i>
          <h2 class="fw-bold mb-2">Forgot Password?</h2>
          <p class="text-muted">Enter your email to receive a reset link</p>
        </div>

        <form id="requestResetForm" class="needs-validation" novalidate>
          <div class="mb-4">
            <label for="resetEmail" class="form-label fw-semibold">Email Address</label>
            <div class="input-group">
              <span class="input-group-text bg-light"><i class="fas fa-envelope"></i></span>
              <input type="email" class="form-control form-control-lg" 
                     id="resetEmail" required
                     placeholder="your@email.com">
            </div>
            <div class="invalid-feedback mt-2">
              <i class="fas fa-exclamation-circle me-2"></i>Please enter a valid email address
            </div>
          </div>

          <button type="submit" class="btn btn-primary btn-lg w-100 py-3 mb-3">
            <i class="fas fa-paper-plane me-2"></i> Send Reset Link
          </button>

          <div class="text-center">
            <a href="/login" class="text-decoration-none">
              <i class="fas fa-arrow-left me-2"></i>Back to Login
            </a>
          </div>
        </form>
      </div>
    </div>

    <!-- Step 2: Check Email (hidden initially) -->
    <div class="card shadow-lg mb-4 d-none" id="checkEmailSection">
      <div class="card-body p-4 p-md-5 text-center">
        <i class="fas fa-envelope-circle-check fa-4x mb-4" style="color: #00A699;"></i>
        <h3 class="fw-bold mb-3">Check Your Email</h3>
        <p class="mb-4">We've sent a password reset link to <span id="userEmailDisplay" class="fw-bold text-primary"></span></p>
        <div class="alert alert-light border">
          <i class="fas fa-info-circle me-2" style="color: #00A699;"></i>
          Didn't receive the email? Check spam or 
          <a href="#" id="resendLink" class="fw-semibold">resend</a>
        </div>
        <a href="/login" class="btn btn-outline-secondary">
          Return to Login
        </a>
      </div>
    </div>

    <!-- Step 3: Reset Password Form (hidden initially) -->
    <div class="card shadow-lg d-none" id="resetPasswordSection">
      <div class="card-body p-4 p-md-5">
        <div class="text-center mb-4">
          <i class="fas fa-lock-open fa-3x mb-3" style="color: #00A699;"></i>
          <h2 class="fw-bold">Create New Password</h2>
          <p class="text-muted">Your new password must be different from previous ones</p>
        </div>

        <form id="resetPasswordForm" class="needs-validation" novalidate>
          <div class="mb-4">
            <label for="newPassword" class="form-label fw-semibold">New Password</label>
            <div class="input-group">
              <span class="input-group-text bg-light"><i class="fas fa-lock"></i></span>
              <input type="password" class="form-control form-control-lg" 
                     id="newPassword" required minlength="8"
                     placeholder="Enter new password">
              <button class="btn btn-outline-secondary toggle-password" type="button">
                <i class="far fa-eye"></i>
              </button>
            </div>
            <div class="invalid-feedback mt-2">
              <i class="fas fa-exclamation-circle me-2"></i>Password must be at least 8 characters
            </div>
            <div class="form-text mt-1">Include numbers and special characters for better security</div>
          </div>

          <div class="mb-4">
            <label for="confirmPassword" class="form-label fw-semibold">Confirm Password</label>
            <div class="input-group">
              <span class="input-group-text bg-light"><i class="fas fa-lock"></i></span>
              <input type="password" class="form-control form-control-lg" 
                     id="confirmPassword" required
                     placeholder="Confirm new password">
              <button class="btn btn-outline-secondary toggle-password" type="button">
                <i class="far fa-eye"></i>
              </button>
            </div>
            <div class="invalid-feedback mt-2">
              <i class="fas fa-exclamation-circle me-2"></i>Passwords must match
            </div>
          </div>

          <button type="submit" class="btn btn-primary btn-lg w-100 py-3">
            <i class="fas fa-save me-2"></i> Update Password
          </button>
        </form>
      </div>
    </div>

  </div>
</div>

<!-- Success Modal -->
<div class="modal fade" id="successModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-body text-center p-5">
        <div class="mb-4">
          <i class="fas fa-check-circle fa-5x" style="color: #00A699;"></i>
        </div>
        <h3 class="fw-bold mb-3">Password Updated!</h3>
        <p class="mb-4">Your password has been changed successfully. You can now login with your new password.</p>
        <button type="button" class="btn btn-primary px-4" data-bs-dismiss="modal" onclick="window.location.href='/login'">
          Continue to Login
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Custom Styles -->
<style>
  .forgot-password-container {
    background: linear-gradient(135deg, #f5f7fa 0%, #e4e8eb 100%);
  }
  
  .card {
    background-color: white;
    border: none;
    border-radius: 16px;
  }
  
  .form-control {
    border: 1px solid #e0e0e0;
    transition: all 0.3s ease;
  }
  
  .form-control:focus {
    border-color: #FF5A5F;
    box-shadow: 0 0 0 0.25rem rgba(255, 90, 95, 0.25);
  }
  
  .btn-primary {
    background-color: #FF5A5F;
    border-color: #FF5A5F;
    font-weight: 600;
    transition: all 0.3s ease;
  }
  
  .btn-primary:hover {
    background-color: #e04b50;
    border-color: #e04b50;
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(255, 90, 95, 0.3);
  }
  
  .invalid-feedback {
    color: #dc3545;
    font-size: 0.875rem;
  }
  
  .toggle-password {
    border-top-right-radius: 8px !important;
    border-bottom-right-radius: 8px !important;
  }
  
  .alert-light {
    background-color: rgba(0, 166, 153, 0.1);
    border-color: rgba(0, 166, 153, 0.2);
  }
  
  a {
    color: #FF5A5F;
    transition: color 0.2s ease;
  }
  
  a:hover {
    color: #e04b50;
    text-decoration: underline;
  }
  
  @media (max-width: 576px) {
    .card {
      padding: 2rem;
    }
  }
</style>

<!-- Enhanced JavaScript -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize Bootstrap validation
    (function() {
      'use strict';
      const forms = document.querySelectorAll('.needs-validation');
      
      Array.from(forms).forEach(form => {
        form.addEventListener('submit', function(event) {
          if (!form.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
          }
          form.classList.add('was-validated');
        }, false);
      });
    })();

    // Password validation
    const newPassword = document.getElementById('newPassword');
    const confirmPassword = document.getElementById('confirmPassword');
    
    function validatePassword() {
      if (newPassword.value !== confirmPassword.value) {
        confirmPassword.setCustomValidity("Passwords don't match");
      } else {
        confirmPassword.setCustomValidity('');
      }
    }
    
    newPassword.addEventListener('input', validatePassword);
    confirmPassword.addEventListener('input', validatePassword);

    // Handle reset request
    document.getElementById('requestResetForm').addEventListener('submit', function(e) {
      e.preventDefault();
      const email = document.getElementById('resetEmail').value;
      
      if (this.checkValidity()) {
        // Simulate API call
        console.log('Reset requested for:', email);
        
        // Show success message
        document.getElementById('requestResetSection').classList.add('d-none');
        document.getElementById('checkEmailSection').classList.remove('d-none');
        document.getElementById('userEmailDisplay').textContent = email;
        
        // Simulate token in URL
        setTimeout(() => {
          window.location.hash = "#reset-token=abc123";
          showResetFormIfTokenPresent();
        }, 1500);
      }
    });

    // Resend link handler
    document.getElementById('resendLink').addEventListener('click', function(e) {
      e.preventDefault();
      alert('Reset link has been resent to your email!');
    });

    // Toggle password visibility
    document.querySelectorAll('.toggle-password').forEach(button => {
      button.addEventListener('click', function() {
        const input = this.parentNode.querySelector('input');
        const icon = this.querySelector('i');
        const type = input.getAttribute('type') === 'password' ? 'text' : 'password';
        input.setAttribute('type', type);
        icon.classList.toggle('fa-eye');
        icon.classList.toggle('fa-eye-slash');
      });
    });

    // Check for reset token in URL
    function showResetFormIfTokenPresent() {
      if (window.location.hash.includes('reset-token')) {
        document.getElementById('checkEmailSection').classList.add('d-none');
        document.getElementById('resetPasswordSection').classList.remove('d-none');
      }
    }

    // Initial check for token
    showResetFormIfTokenPresent();

    // Handle password reset
    document.getElementById('resetPasswordForm').addEventListener('submit', function(e) {
      e.preventDefault();
      
      if (this.checkValidity()) {
        // Simulate password reset
        console.log('Password reset to:', newPassword.value);
        
        // Show success modal
        const successModal = new bootstrap.Modal(document.getElementById('successModal'));
        successModal.show();
      }
    });
  });
</script>